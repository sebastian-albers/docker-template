sudo: required
services:
- docker
language: bash
script:
# register qemu-*-static for all supported processors except the current one
- docker run --rm --privileged multiarch/qemu-user-static:register --reset
# generate platform-specific Dockerfile
- ./generate-dockerfiles.sh
# build platform-specific Docker images
- docker build -f Dockerfile.amd64 -t __DOCKER_HUB_USERNAME__/__CONTAINER__:latest-amd64 .
- docker build -f Dockerfile.arm32v7 -t __DOCKER_HUB_USERNAME__/__CONTAINER__:latest-arm32v7 .
- docker build -f Dockerfile.arm64v8 -t __DOCKER_HUB_USERNAME__/__CONTAINER__:latest-arm64v8 .
# test platform-specific Docker images
- ./read-version.sh amd64
- ./read-version.sh arm32v7
- ./read-version.sh arm64v8
after_success:
# trigger latest build on Docker Hub
- curl -X POST "${DOCKER_HUB_TRIGGER_URL}"
# read version from Docker container
- version=$(./read-version.sh amd64)
# tag Docker images with version
- docker tag "__DOCKER_HUB_USERNAME__/__CONTAINER__:latest-amd64" "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-amd64"
- docker tag "__DOCKER_HUB_USERNAME__/__CONTAINER__:latest-arm32v7" "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-arm32v7"
- docker tag "__DOCKER_HUB_USERNAME__/__CONTAINER__:latest-arm64v8" "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-arm64v8"
# push images with version to Docker Hub
- echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
- docker push "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-amd64"
- docker push "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-arm32v7"
- docker push "__DOCKER_HUB_USERNAME__/__CONTAINER__:${version}-arm64v8"
# push multi-arch image with version to Docker Hub
- ./push-multi-arch-image.sh "${version}"
